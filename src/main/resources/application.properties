spring.cache.type = none
# =====================	
# 	SERVER CONNECTION	
# =====================	
## Configure the port to access http://localhost:8081/
server.port = 8081
## Configure show whitelabel page when not find endpoint (true or false)
server.error.whitelabel.enabled = true

# =====================	
# 	SQL CONNECTION	
# =====================
## BBDD mySQL	
## Database "dice"
spring.datasource.url = jdbc:mysql://${MYSQL_HOST:localhost}:3306/dice?useJDBCCompliantTimezoneShift=true&useLegacyDatetimeCode=false&serverTimezone=UTC
spring.datasource.username = root
spring.datasource.password =

# =====================	
# 	SPRING JPA	
# =====================
## Show query in cmd
spring.jpa.show-sql = true
## Show query pretty in cmd	
spring.jpa.properties.hibernate.format_sql = true

## The standard Hibernate property values are: create, update, create-drop, validate and none:
## _Ref: https://www.baeldung.com/spring-boot-data-sql-and-schema-sql 
## Drop in to create the table, good for testing, comment this in production. 
spring.jpa.hibernate.ddl-auto = create-drop
#spring.jpa.generate-ddl = false

## Need to load data to initialize database
## _ref: https://docs.spring.io/spring-boot/docs/current/reference/html/howto.html#howto-initialize-a-database-using-spring-jdbc
#spring.datasource.initialization-mode = always

# =====================	
# 	SPRING Scripts	
# =====================

## Spring Boot will detect your database type, and execute those scripts by default
#spring.batch.initializer.enabled = true

## Initial data script Hibernate support --> Throws a exception:  Error executing DDL ... via JDBC Statement...  
#spring.jpa.properties.hibernate.hbm2ddl.import_files = classpath:/com/franchines/Script/data.sql
## Initial data script Spring JDBC support
#spring.datasource.data = classpath:/com/daus/Script/data.sql

